Conor Brown, Chiyun Liu, Zane Meyer, Jacob Sandler
Team 20
Testing Database Synopsis

1: The system does not require all patients under 18 to have an adult. It is possible to add a patient under 18 to the child patient table when they do not have an established guardian. There would need to be a trigger that requires a guardian be added with a patient under 18.
2: Currently the system does not require the patient added to the all guardians table to be under 18. A limit on who could have a guardian would need to be added.
3: The tests assert that the system is able to have an underaged patient with different guardians appear at different visits.
4: We are able to intake a patient's credit card information however insurance id is required to be a primary key within the intakes table. We cannot take in a patient’s cc info without also taking in an insurance id. This means we would need to make it not a primary key or set aside a key to signify that they are uninsured. However, the prior would probably be preferred.
5: As our current database is set up we cannot enter uninsured patients. As stated above we would need to not require a patient to have an insurance id when recording the cc info within the intakes table. Once that was fixed an uninsured patient would be able to be entered without collecting the cc info.
6: The insurance information for an insured patient is captured within the INSURANCE_PROVIDER and is captured during intake. However, insurance provider information is captured for every patient that uses that provider, so there is a lot of duplication.
7: There is no constraint forcing a diagnosis during a visit, so there could potentially be a visit with no service provider. This can be remedied by using a trigger. Several diagnoses can be given per visit and there is not a constraint forcing every diagnosis to be done by the same service provider for one visit so there can be more than one. There is also no constraint that a diagnosis and a treatment be given by the same service provider. There also isn’t currently a foreign key relationship in DIAGNOSES to EMPLOYEE on EID, which is a typo.
8: There is no constraint that would force service providers to be the  same on separate visits, so there can be different service providers on different visits.
9: Multiple diagnosis have been given during visit 6 they all worked!
10: This was a major success! 100% 
11: With our current database, there is no constraint to ensure that only the doctor can make diagnoses since the DIAGNOSES table contains EID(employee id ) which should be change to SID(in DOCTOR table) if we want the only employee that gives DIAGNOSIS is a DOCTOR.
12: With our database, if the data are added in the proper order, where no foreign key gets defined before the primary key exists, then the system properly documents additional tests/procedures with the proper coding.
13: Our database is designed so that there’s a VISIT_RECORD to keep track of the Visits. And in the VISIT_RECORD there’s a VisitID as primary key. This means that a visit allows for only one initial assessment to be completed and all visits in VISIT_RECORD are distinct with the VisitID.
14: It makes sense that a patient can visit the urgent care more than one time, and with our system this is successfully captured in the VISIT_RECORD where a patient with a PatID can exist in multiple VISIT_RECORD rows
15: Our initial assessment is captured in the VISIT_RECORD, and with the EID in the VISIT_RECORD and the EID in NURSE, the nurse’s information can be retrieved and associated with the initial assessments with EID in EMPLOYEE, NURSE and VISIT_RECORD.

16: The tests show us that the system does allow a nurse to do initial assessments for multiple patients on the same day and different days, but that the days the test was done on isn’t captured. The way that this works is by just creating a new Visit_Record and associated VisitID every time the nurse needs to do an initial assessment. You can see this is working because the query returns the right visitID and patient id no matter the day it was done on as stated in the comments in the SQL insert. We really should change the design to include the date of the assessment though as an element of the database.
17: Yes you can view them just by providing a patient id and visit id in the query and what vitals you wish to view. In the query it outputs the right vitals given the same patient with a different visit id. 
18: This also works perfectly as you can see in the insert there are multiple diagnoses (tests) from the same service provider (doctor) for the same adult patient, and the query is able to pull out one specific diagnosis based on it’s unique id.
19: They both work in this case because the primary key of DIAGNOSES is composed of the VisitID and ICD_10_CM only the EID cannot be the only thing that’s different in a DIAGNOSES relationship. This is demonstrated by the insert failing because it doesn’t fulfill the table’s constraints.  On the other hand since the primary key is both VisitID and ICD_10_CM as long as one of them is different the other one can stay the same. This is demonstrated in the query result as well.
20: In this case the Query Shows that the table does have primary keys,  but they are formed from foreign key relationships in both cases which is inadvisable. To fix this simply classify the EIDs of Nurse and Doctor as primary keys as well when creating the database. Also the NID and SID keys are redundant and should probably be removed.  

